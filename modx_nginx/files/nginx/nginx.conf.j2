user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
	#Директива use устанавливает метод выбора соединений.
	use epoll;
	# Устанавливает максимальное количество соединений одного рабочего процесса.
	# Следует выбирать значения от 1024 до 4096.
	worker_connections 1024;
	# multi_accept on;
}

http {
	#Nginx умеет кешировать информацию о файлах, с которыми ему приходится работать (например, css стили или картинки).
	# Если к таким файлам происходит много обращений, кеширование может значительно ускорить этот процесс.
	#
	# Определяет максимальное количество файлов, информация о которых будет содержаться в кеше
	open_file_cache max=200000 inactive=20s;
	# Определяет через какое время информация будет удалена из кеша
	open_file_cache_valid 30s;
	# Будет кешировать информацию о тех файлах, которые были использованы хотя бы 2 раза
	open_file_cache_min_uses 2;
	# Будет кешировать информацию об отсутствующих файлах
	open_file_cache_errors on;
	##
	##
	#Основной лог лучше отключить для экономии дисковых операций, а лог ошибок лучше
	# перевести в режим логирования только критических ситуаций.
	access_log off;
	##
	##
	#Много проблем могут создать медленные (тупящие) клиенты.
        #Медленная передача тела запроса от клиента к серверу и неожиданное закрытие клиентом
        # соединений могут создать большое количество лишних соединений на сервере.
	reset_timedout_connection on;
	##
	# Будет ждать 10 секунд тело запроса от клиента, после чего сбросит соединение
	client_body_timeout 10;
	# Если клиент прекратит чтение ответа, Nginx подождет 2 секунды и сбросит соединение
	send_timeout 2;
	##
	##
	server_tokens off;
	client_body_buffer_size 1K;
	client_header_buffer_size 1k;
	#Ограничение отправку больших запросов на сервер,если это не предусмотрено сервером.
	client_max_body_size 1k;
	large_client_header_buffers 2 1k;
	client_header_timeout 10;
	keepalive_timeout 5 5;
	##
	# Basic Settings
	##
	#Это новый стандарт компрессии данных, разработанный Google.
	#В двух словах: это новый вид сжатия, который оптимизирован для веб-применений (HTML, CSS, JS и т.д.)
	# за счет использования статического словаря и других оптимизаций.
#	brotli on;
	#Уровень сжатия.От 1 до 11.11 уровень является максимальным для высоконагруженных серверов.
#	brotli_comp_level 6;
	#Включение сжатия статического контента
#	brotli_static on;
	#Включение динамического контента
#	brotli_types application/atom+xml application/javascript application/json application/rss+xml
#		application/vnd.ms-fontobject application/x-font-opentype application/x-font-truetype
#		application/x-font-ttf application/x-javascript application/xhtml+xml application/xml
#		font/eot font/opentype font/otf font/truetype image/svg+xml image/vnd.microsoft.icon
#		image/x-icon image/x-win-bitmap text/css text/javascript text/plain text/xml;
	##
	#Позволяет передавать данные из одного файлового дескриптора в другой прямо внутри
	#пространства ядра. 
	sendfile on;
	#Оптимизирует количество данных переданных за раз
	tcp_nopush on;
	#Заставляет сокет отправлять данные в буфер вне зависимости от размера пакета.
	tcp_nodelay on;
	#Определяет максимальный размер записи в хэш-таблицах типов MIME.
	types_hash_max_size 2048;

	# server_names_hash_bucket_size 64;
	# server_name_in_redirect off;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	##
	# SSL Settings
	##

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
	ssl_prefer_server_ciphers on;

	##
	# Logging Settings
	##

	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	##
	# Gzip Settings
	##

	#gzip on;

	# gzip_vary on;
	# gzip_proxied any;
	# gzip_comp_level 6;
	# gzip_buffers 16 8k;
	# gzip_http_version 1.1;
	# gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

	##
	# Virtual Host Configs
	##

	include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-enabled/*;
}
#mail {
#	# See sample authentication script at:
#	# http://wiki.nginx.org/ImapAuthenticateWithApachePhpScript
#
#	# auth_http localhost/auth.php;
#	# pop3_capabilities "TOP" "USER";
#	# imap_capabilities "IMAP4rev1" "UIDPLUS";
#
#	server {
#		listen     localhost:110;
#		protocol   pop3;
#		proxy      on;
#	}
#
#	server {
#		listen     localhost:143;
#		protocol   imap;
#		proxy      on;
#	}
#}
